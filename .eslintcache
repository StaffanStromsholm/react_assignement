[{"/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/index.js":"1","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/App.js":"2","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/SinglePost/SinglePost.js":"3","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/Posts/Posts.js":"4","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/AddPost/AddPost.js":"5","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/Header/Header.js":"6","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/Welcome/Welcome.js":"7","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/Aside/Aside.js":"8"},{"size":245,"mtime":1616186526706,"results":"9","hashOfConfig":"10"},{"size":2668,"mtime":1616186526704,"results":"11","hashOfConfig":"10"},{"size":1496,"mtime":1616186526706,"results":"12","hashOfConfig":"10"},{"size":1094,"mtime":1616186526705,"results":"13","hashOfConfig":"10"},{"size":1638,"mtime":1616186526705,"results":"14","hashOfConfig":"10"},{"size":1378,"mtime":1616186526705,"results":"15","hashOfConfig":"10"},{"size":1671,"mtime":1616187080550,"results":"16","hashOfConfig":"10"},{"size":2774,"mtime":1616186526705,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1dpmaho",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/index.js",[],["37","38"],"/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/App.js",["39","40","41"],"import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory, useRouteMatch } from 'react-router-dom';\nimport './App.css';\nimport Posts from './Components/Posts/Posts';\nimport AddPost from './Components/AddPost/AddPost';\nimport axios from 'axios';\nimport Header from './Components/Header/Header';\nimport SinglePost from './Components/SinglePost/SinglePost.js';\nimport Welcome from './Components/Welcome/Welcome';\nimport Aside from './Components/Aside/Aside';\n\n// fetching data from fake json server hosted on my-json-server.typicode.com, posting to this db does not work, use localhost for that\nconst DB = 'https://my-json-server.typicode.com/StaffanStromsholm/react-assignement-db/posts';\n\nconst localhostDB = 'http://localhost:3001/posts';\n\nconst App = () => {\n  const [post, setPost] = useState({\n    title: '',\n    author: '',\n    imgUrl: '',\n    description: ''\n  });\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const [posts, setPosts] = useState([]);\n\n  const history = useHistory();\n\n  let { path, url } = useRouteMatch();\n\n  useEffect(() => {\n    axios\n      .get(DB)\n      .then(result => setPosts(result.data))\n  }, []);\n\n  const onChangeHandler = (e) => {\n    setPost({\n      ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    axios.post(DB, post)\n      .then(() => {\n        return axios.get(DB)\n      })\n      .then(result => {\n        setPosts(result.data);\n        alert('New post was succesfully created');\n        history.push(\"/react_assignement/posts\");\n      });\n  };\n\n  const setLoggedInToFalseHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const setLoggedInToTrueHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <Header isLoggedIn={isLoggedIn} logoutHandler={setLoggedInToFalseHandler} loginHandler={setLoggedInToTrueHandler} />\n\n      <Switch>\n      <Route exact path={`/react_assignement`}>\n      {/* passing functions as props to handle state from child component Welcome to parent Component App */}\n        <Welcome logoutHandler={setLoggedInToFalseHandler} loginHandler={setLoggedInToTrueHandler} isLoggedIn={isLoggedIn} />\n      </Route>\n        <Route path={`/react_assignement/post/:postID`}>\n          <SinglePost />\n        </Route>\n        <Route path={`/react_assignement/posts`} >\n          <Posts posts={posts} />\n          <Aside />\n        </Route>\n        <Route path={`/react_assignement/newpost`}>x\n          <AddPost onChangeHandler={onChangeHandler} onSubmitHandler={onSubmitHandler} />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n};\n\nexport default App;\n","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/SinglePost/SinglePost.js",["42"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './SinglePost.css';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Post = ({post}) => {\n    return (\n        <div className=\"SinglePost-container\">\n        <Card className=\"SinglePost-card\" style={{ width: '900px' }}>\n            <Card.Img className=\"SinglePost-img\" variant=\"top\" src={post.imgUrl} />\n            <Card.Body>\n                <Card.Title>{post.title}</Card.Title>\n                <Card.Text>\n                    {post.description}\n                </Card.Text>\n                <Link className=\"back-btn\" to=\"/react_assignement/posts\">Back</Link>\n            </Card.Body>\n        </Card>\n    </div>\n    )\n}\n\nconst SinglePost = () => {\n    const [post, setPost] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    let { postID } = useParams();\n\n    useEffect(() => {\n        axios.get('https://my-json-server.typicode.com/StaffanStromsholm/react-assignement-db/posts/' + postID)\n            .then(result => {\n                setPost(result.data);\n                setIsLoading(false);\n            } );  \n    }, []);\n\n    let postData = undefined;\n\n    if(isLoading){\n        postData = <h2 className=\"loading\">Loading...</h2>;\n    }\n\n    if(!isLoading){\n        postData = <Post post={post} />;\n    }\n\n    return (\n        <>{postData}</>\n    );\n};\n\nexport default SinglePost;","/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/Posts/Posts.js",[],"/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/AddPost/AddPost.js",[],"/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/Header/Header.js",[],"/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/Welcome/Welcome.js",[],"/Users/staffanstromsholm/Documents/GitHub/react_assignement/src/Components/Aside/Aside.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":15,"column":7,"nodeType":"49","messageId":"50","endLine":15,"endColumn":18},{"ruleId":"47","severity":1,"message":"51","line":31,"column":9,"nodeType":"49","messageId":"50","endLine":31,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":31,"column":15,"nodeType":"49","messageId":"50","endLine":31,"endColumn":18},{"ruleId":"53","severity":1,"message":"54","line":36,"column":8,"nodeType":"55","endLine":36,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'localhostDB' is assigned a value but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","'url' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postID'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [postID]",{"range":"62","text":"63"},[1231,1233],"[postID]"]