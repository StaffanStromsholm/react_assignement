[{"/Users/staffan/Documents/react-assignement/src/index.js":"1","/Users/staffan/Documents/react-assignement/src/App.js":"2","/Users/staffan/Documents/react-assignement/src/Components/Posts/Posts.js":"3","/Users/staffan/Documents/react-assignement/src/Components/AddPost/AddPost.js":"4","/Users/staffan/Documents/react-assignement/src/Components/Header/Header.js":"5","/Users/staffan/Documents/react-assignement/src/Components/BlogCard/BlogCard.js":"6","/Users/staffan/Documents/react-assignement/src/Components/SinglePost/SinglePost.js":"7","/Users/staffan/Documents/react-assignement/src/Components/Welcome/Welcome.js":"8","/Users/staffan/Documents/react-assignement/src/Components/Aside/Aside.js":"9"},{"size":245,"mtime":1610309390366,"results":"10","hashOfConfig":"11"},{"size":2518,"mtime":1610309398743,"results":"12","hashOfConfig":"11"},{"size":1058,"mtime":1610304152803,"results":"13","hashOfConfig":"11"},{"size":1620,"mtime":1610304201015,"results":"14","hashOfConfig":"11"},{"size":1307,"mtime":1610308510020,"results":"15","hashOfConfig":"11"},{"size":467,"mtime":1609961731502,"results":"16","hashOfConfig":"17"},{"size":1175,"mtime":1610306563698,"results":"18","hashOfConfig":"11"},{"size":1615,"mtime":1610304217728,"results":"19","hashOfConfig":"11"},{"size":2774,"mtime":1610308060370,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1h60jro",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},"m6tcu0",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/staffan/Documents/react-assignement/src/index.js",[],["45","46"],"/Users/staffan/Documents/react-assignement/src/App.js",["47","48"],"import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory, useRouteMatch } from 'react-router-dom';\nimport './App.css';\nimport Posts from './Components/Posts/Posts';\nimport AddPost from './Components/AddPost/AddPost';\nimport axios from 'axios';\nimport Header from './Components/Header/Header';\nimport SinglePost from './Components/SinglePost/SinglePost.js';\nimport Welcome from './Components/Welcome/Welcome';\nimport Aside from './Components/Aside/Aside';\n\n// fetching data from fake json server hosted on typicode.com, posting to db does not work, use localhost for that\nconst API = 'https://my-json-server.typicode.com/StaffanStromsholm/react-assignement-db/posts';\n\nconst localhostAPI = 'http://localhost:3001/posts';\n\nconst App = () => {\n  const [post, setPost] = useState({\n    title: '',\n    author: '',\n    imgUrl: '',\n    description: ''\n  });\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const [posts, setPosts] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(API)\n      .then(result => setPosts(result.data))\n  }, []);\n\n  const onChangeHandler = (e) => {\n    setPost({\n      ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    axios.post(API, post)\n      .then(() => {\n        return axios.get(API)\n      })\n      .then(result => {\n        setPosts(result.data);\n        alert('New post was succesfully created');\n        history.push(\"/posts\");\n      });\n  };\n\n  const setLoggedInToFalseHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const setLoggedInToTrueHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <Header isLoggedIn={isLoggedIn} logoutHandler={setLoggedInToFalseHandler} loginHandler={setLoggedInToTrueHandler} />\n\n      <Switch>\n      <Route exact path=\"/\">\n      {/* passing functions as props to handle state from child component Welcome to parent Component App */}\n        <Welcome logoutHandler={setLoggedInToFalseHandler} loginHandler={setLoggedInToTrueHandler} isLoggedIn={isLoggedIn} />\n      </Route>\n        <Route path={`/post/:postID`}>\n          <SinglePost />\n        </Route>\n        <Route path=\"/posts\" >\n          <Posts posts={posts} />\n          <Aside />\n        </Route>\n        <Route path=\"/newpost\">x\n          <AddPost onChangeHandler={onChangeHandler} onSubmitHandler={onSubmitHandler} />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n};\n\nexport default App;\n","/Users/staffan/Documents/react-assignement/src/Components/Posts/Posts.js",[],"/Users/staffan/Documents/react-assignement/src/Components/AddPost/AddPost.js",[],"/Users/staffan/Documents/react-assignement/src/Components/Header/Header.js",[],"/Users/staffan/Documents/react-assignement/src/Components/BlogCard/BlogCard.js",["49"],"import React from 'react'\nimport './BlogCard.css';\nimport {Link} from 'react-router-dom';\n\nfunction BlogCard({title, author, imgUrl, description, link}) {\n    console.log(link);\n    return (\n        <div className=\"BlogCard\">\n        <img src={imgUrl}/>\n            <h2>{title}</h2>\n            <h3><em>{author}</em></h3>\n            <p>{description}</p>\n            <Link to={link}><button> Read More </button></Link>\n        </div>\n    )\n}\n\nexport default BlogCard\n",["50","51"],"/Users/staffan/Documents/react-assignement/src/Components/SinglePost/SinglePost.js",["52"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './SinglePost.css';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst dbEndpoit = 'http://localhost:3001/posts';\n\nconst SinglePost = () => {\n    const [post, setPost] = useState({});\n    let { postID } = useParams();\n\n    useEffect(() => {\n        axios.get(dbEndpoit)\n            .then(result => result.data.find(post => post.id === {postID}))\n            .then(result => setPost(result))\n    }, []);\n\n    return (\n        <div className=\"SinglePost-container\">\n            <Card className=\"SinglePost-card\" style={{ width: '900px' }}>\n                <Card.Img className=\"SinglePost-img\" variant=\"top\" src={post.imgUrl} />\n                <Card.Body>\n                    <Card.Title>{post.title}</Card.Title>\n                    <Card.Text>\n                        {post.description}\n                    </Card.Text>\n                    <Link className=\"back-btn\" to=\"/posts\">Back</Link>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n};\n\nexport default SinglePost;","/Users/staffan/Documents/react-assignement/src/Components/Welcome/Welcome.js",[],["53","54"],"/Users/staffan/Documents/react-assignement/src/Components/Aside/Aside.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":37,"nodeType":"61","messageId":"62","endLine":2,"endColumn":50},{"ruleId":"59","severity":1,"message":"63","line":15,"column":7,"nodeType":"61","messageId":"62","endLine":15,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":9,"column":9,"nodeType":"66","endLine":9,"endColumn":28},{"ruleId":"55","replacedBy":"67"},{"ruleId":"57","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":19,"column":8,"nodeType":"71","endLine":19,"endColumn":10,"suggestions":"72"},{"ruleId":"55","replacedBy":"73"},{"ruleId":"57","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'localhostAPI' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["75"],["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postID'. Either include it or remove the dependency array.","ArrayExpression",["77"],["75"],["76"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [postID]",{"range":"80","text":"81"},[581,583],"[postID]"]