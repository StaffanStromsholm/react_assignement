[{"/Users/staffan/Documents/react-assignement/src/index.js":"1","/Users/staffan/Documents/react-assignement/src/App.js":"2","/Users/staffan/Documents/react-assignement/src/Components/Posts/Posts.js":"3","/Users/staffan/Documents/react-assignement/src/Components/AddPost/AddPost.js":"4","/Users/staffan/Documents/react-assignement/src/Components/Header/Header.js":"5","/Users/staffan/Documents/react-assignement/src/Components/BlogCard/BlogCard.js":"6","/Users/staffan/Documents/react-assignement/src/Components/SinglePost/SinglePost.js":"7","/Users/staffan/Documents/react-assignement/src/Components/Welcome/Welcome.js":"8","/Users/staffan/Documents/react-assignement/src/Components/Aside/Aside.js":"9"},{"size":245,"mtime":1609329454214,"results":"10","hashOfConfig":"11"},{"size":2382,"mtime":1610111322739,"results":"12","hashOfConfig":"11"},{"size":1056,"mtime":1610107988932,"results":"13","hashOfConfig":"11"},{"size":1620,"mtime":1610107920822,"results":"14","hashOfConfig":"11"},{"size":1293,"mtime":1610107862626,"results":"15","hashOfConfig":"11"},{"size":467,"mtime":1609961731502,"results":"16","hashOfConfig":"11"},{"size":1172,"mtime":1610107902879,"results":"17","hashOfConfig":"11"},{"size":1615,"mtime":1610108019857,"results":"18","hashOfConfig":"11"},{"size":4487,"mtime":1610107974521,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"m6tcu0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/staffan/Documents/react-assignement/src/index.js",[],["42","43"],"/Users/staffan/Documents/react-assignement/src/App.js",["44"],"import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory, useRouteMatch } from 'react-router-dom';\nimport './App.css';\nimport Posts from './Components/Posts/Posts';\nimport AddPost from './Components/AddPost/AddPost';\nimport axios from 'axios';\nimport Header from './Components/Header/Header';\nimport SinglePost from './Components/SinglePost/SinglePost.js';\nimport Welcome from './Components/Welcome/Welcome';\nimport Aside from './Components/Aside/Aside';\n\nconst API = 'https://my-json-server.typicode.com/StaffanStromsholm/react-assignement-db/posts' || 'http://localhost:3001/posts';\n\nconst App = () => {\n  const [post, setPost] = useState({\n    title: '',\n    author: '',\n    imgUrl: '',\n    description: ''\n  });\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const [posts, setPosts] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(API)\n      .then(result => setPosts(result.data))\n  }, []);\n\n  const onChangeHandler = (e) => {\n    setPost({\n      ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    axios.post(API, post)\n      .then(() => {\n        return axios.get(API)\n      })\n      .then(result => {\n        setPosts(result.data);\n        alert('New post was succesfully created');\n        history.push(\"/posts\");\n      });\n  };\n\n  const setLoggedInToFalseHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const setLoggedInToTrueHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <Header isLoggedIn={isLoggedIn} logoutHandler={setLoggedInToFalseHandler} loginHandler={setLoggedInToTrueHandler} />\n\n      <Switch>\n      <Route exact path=\"/\">\n      {/* passing functions as props to handle state from child component Welcome to parent Component App */}\n        <Welcome logoutHandler={setLoggedInToFalseHandler} loginHandler={setLoggedInToTrueHandler} isLoggedIn={isLoggedIn} />\n      </Route>\n        <Route path={`/post/:postID`}>\n          <SinglePost />\n        </Route>\n        <Route path=\"/posts\" >\n          <Posts posts={posts} />\n          <Aside />\n        </Route>\n        <Route path=\"/newpost\">\n          <AddPost onChangeHandler={onChangeHandler} onSubmitHandler={onSubmitHandler} />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n};\n\nexport default App;\n","/Users/staffan/Documents/react-assignement/src/Components/Posts/Posts.js",[],"/Users/staffan/Documents/react-assignement/src/Components/AddPost/AddPost.js",[],"/Users/staffan/Documents/react-assignement/src/Components/Header/Header.js",[],"/Users/staffan/Documents/react-assignement/src/Components/BlogCard/BlogCard.js",["45"],"import React from 'react'\nimport './BlogCard.css';\nimport {Link} from 'react-router-dom';\n\nfunction BlogCard({title, author, imgUrl, description, link}) {\n    console.log(link);\n    return (\n        <div className=\"BlogCard\">\n        <img src={imgUrl}/>\n            <h2>{title}</h2>\n            <h3><em>{author}</em></h3>\n            <p>{description}</p>\n            <Link to={link}><button> Read More </button></Link>\n        </div>\n    )\n}\n\nexport default BlogCard\n",["46","47"],"/Users/staffan/Documents/react-assignement/src/Components/SinglePost/SinglePost.js",["48","49"],"/Users/staffan/Documents/react-assignement/src/Components/Welcome/Welcome.js",[],"/Users/staffan/Documents/react-assignement/src/Components/Aside/Aside.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":37,"nodeType":"56","messageId":"57","endLine":2,"endColumn":50},{"ruleId":"58","severity":1,"message":"59","line":9,"column":9,"nodeType":"60","endLine":9,"endColumn":28},{"ruleId":"50","replacedBy":"61"},{"ruleId":"52","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":17,"column":62,"nodeType":"65","messageId":"66","endLine":17,"endColumn":64},{"ruleId":"67","severity":1,"message":"68","line":19,"column":8,"nodeType":"69","endLine":19,"endColumn":10,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["71"],["72"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postID'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [postID]",{"range":"76","text":"77"},[578,580],"[postID]"]