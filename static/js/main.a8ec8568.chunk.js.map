{"version":3,"sources":["Components/Posts/Posts.js","Components/AddPost/AddPost.js","Components/Header/Header.js","Components/SinglePost/SinglePost.js","Components/Welcome/Welcome.js","Components/Aside/Aside.js","App.js","index.js"],"names":["Posts","posts","map","p","createBlogCard","Card","className","to","id","Img","variant","src","imgUrl","Body","Title","title","Text","description","substring","Footer","author","PostsWrappedInDiv","AddPost","onChangeHandler","onSubmitHandler","Form","onSubmit","Group","controlId","Label","Control","name","required","onChange","type","placeholder","as","rows","Button","Header","isLoggedIn","logoutHandler","loginHandler","Navbar","collapseOnSelect","expand","bg","Brand","icon","faParagraph","Toggle","aria-controls","Collapse","Nav","Link","href","onClick","Post","post","style","width","SinglePost","useState","setPost","isLoading","setIsLoading","postID","useParams","useEffect","axios","get","then","result","data","postData","undefined","LoggedInGreeting","NotLoggedInGreeting","Greeting","LoginButton","handleLogin","LogoutButton","handleLogout","Welcome","button","months","Year2021","useRouteMatch","path","url","listOfMonths","month","Year2020","Month2021","toUpperCase","Month2020","Aside","DB","App","setIsLoggedIn","setPosts","history","useHistory","setLoggedInToFalseHandler","setLoggedInToTrueHandler","exact","e","target","value","preventDefault","alert","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8ec8568.chunk.js","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport './Posts.css';\n\nconst Posts = ({posts}) => {\n    return(\n        posts.map((p) => {\n            return createBlogCard(p);\n          })\n    );\n};\n\nconst createBlogCard = (p) => {\n    return(\n        <Card className=\"posts-card\" key={p.id}>\n          <Link to={`/react_assignement/post/${p.id}`}><Card.Img variant=\"top\" src={p.imgUrl} /></Link>\n          <Card.Body>\n            <Card.Title>{p.title}</Card.Title>\n            <Card.Text>\n              {/* truncate text */}\n              {p.description.substring(0, 200)}...\n            </Card.Text>\n            <Link className=\"read-more\" to={`/react_assignement/post/${p.id}`}>Read more</Link>\n          </Card.Body>\n          <Card.Footer>\n            <small className=\"text-muted\">Posted by {p.author}</small>\n          </Card.Footer>\n        </Card>\n      );\n};\n\nconst PostsWrappedInDiv = ({posts}) => {\n    return <div className=\"posts\"><Posts posts={posts} /></div>\n};\n\nexport default PostsWrappedInDiv;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './AddPost.css';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction AddPost({ onChangeHandler, onSubmitHandler }) {\n\n    return (<div className=\"addPost\">\n\n        <h2 className=\"newpost-title\">Create New Post</h2>\n\n        <Form onSubmit={onSubmitHandler}>\n\n            <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control name=\"title\" required onChange={onChangeHandler} type=\"text\" placeholder=\"Title\" />\n            </Form.Group>\n            <Form.Group controlId=\"author\">\n                <Form.Label>Author</Form.Label>\n                <Form.Control name=\"author\" required onChange={onChangeHandler} type=\"text\" placeholder=\"Author\" />\n            </Form.Group>\n            <Form.Group controlId=\"imgUrl\">\n                <Form.Label>Image Url</Form.Label>\n                <Form.Control name=\"imgUrl\" required onChange={onChangeHandler} type=\"text\" placeholder=\"Image Url\" />\n            </Form.Group>\n            <Form.Group controlId=\"description\">\n                <Form.Label>Text</Form.Label>\n                <Form.Control name=\"description\" required onChange={onChangeHandler} as=\"textarea\" rows={3} />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\">Add</Button>\n            <Button variant=\"primary\" className=\"new-post-back-btn\" type=\"button\"><Link to=\"/react_assignement/posts\">Back</Link></Button>\n\n        </Form>\n        \n    </div>\n    );\n};\n\nexport default AddPost;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faParagraph } from '@fortawesome/free-solid-svg-icons';\n\n\n\nfunction Header({isLoggedIn, logoutHandler, loginHandler}) {\n    return (\n        <Navbar className=\"navbar\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand><Link to=\"/react_assignement\"><FontAwesomeIcon icon={faParagraph} /></Link></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/react_assignement/posts\"><Link to=\"/react_assignement/posts\">Blogposts</Link></Nav.Link>\n                {/* Conditional rendering */}\n                {isLoggedIn && <Nav.Link><Link to=\"/react_assignement/newpost\">New Post</Link></Nav.Link>}\n                {isLoggedIn && <Nav.Link><Link onClick={logoutHandler}>Logout</Link></Nav.Link>}\n                {!isLoggedIn && <Nav.Link><Link onClick={loginHandler}>Login</Link></Nav.Link>}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './SinglePost.css';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Post = ({post}) => {\n    return (\n        <div className=\"SinglePost-container\">\n        <Card className=\"SinglePost-card\" style={{ width: '900px' }}>\n            <Card.Img className=\"SinglePost-img\" variant=\"top\" src={post.imgUrl} />\n            <Card.Body>\n                <Card.Title>{post.title}</Card.Title>\n                <Card.Text>\n                    {post.description}\n                </Card.Text>\n                <Link className=\"back-btn\" to=\"/react_assignement/posts\">Back</Link>\n            </Card.Body>\n        </Card>\n    </div>\n    )\n}\n\nconst SinglePost = () => {\n    const [post, setPost] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    let { postID } = useParams();\n\n    useEffect(() => {\n        axios.get('https://my-json-server.typicode.com/StaffanStromsholm/react-assignement-db/posts/' + postID)\n            .then(result => {\n                setPost(result.data);\n                setIsLoading(false);\n            } );  \n    }, []);\n\n    let postData = undefined;\n\n    if(isLoading){\n        postData = <h2 className=\"loading\">Loading...</h2>;\n    }\n\n    if(!isLoading){\n        postData = <Post post={post} />;\n    }\n\n    return (\n        <>{postData}</>\n    );\n};\n\nexport default SinglePost;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Welcome.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst LoggedInGreeting = ({ isLoggedIn }) => {\n    return <h1 className=\"rotate\">Welcome Guest User!</h1>;\n}\n\nconst NotLoggedInGreeting = ({ isLoggedIn }) => {\n    return <h1 className=\"rotate\">Welcome! Please login.</h1>;\n}\n\n// Conditional rendering\nconst Greeting = ({ isLoggedIn }) => {\n    if (isLoggedIn) {\n        return <LoggedInGreeting />;\n    }\n    return <NotLoggedInGreeting />;\n}\n\nconst LoginButton = ({ handleLogin }) => {\n    return (\n        <button className=\"welcome-btn\" onClick={handleLogin}>Login</button>\n    );\n}\n\nconst LogoutButton = ({ handleLogout }) => {\n    return (\n        <button className=\"welcome-btn\" onClick={handleLogout}>Logout</button>\n    );\n}\n\nconst Welcome = ({ isLoggedIn, logoutHandler, loginHandler }) => {\n    let button;\n\n    const handleLogin = () => {\n        loginHandler();\n    }\n\n    const handleLogout = () => {\n        logoutHandler();\n    }\n\n    // conditional rendering and passing props to Component\n    if (isLoggedIn) {\n        button = <LogoutButton handleLogout={handleLogout} />;\n    } else {\n        button = <LoginButton handleLogin={handleLogin} />;\n    };\n\n    return (\n        <div className=\"Welcome\">\n            <div className=\"welcome-content\">\n                {/* passing props */}\n                <Greeting isLoggedIn={isLoggedIn} />\n                {button}\n                {isLoggedIn && <Link to=\"/react_assignement/posts\"><button className=\"welcome-btn\">Read Blogposts</button></Link>}\n            </div>\n        </div>\n    );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch\n} from 'react-router-dom';\nimport './Aside.css';\n\nconst months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"];\n\nconst Aside = () => {\n    let {path, url} = useRouteMatch();\n\n    return (\n        <div className=\"Aside\">\n            <Router>\n                <div>\n                <h2>Search posts by year</h2>\n                    <ul>\n                        <li>\n                            <Link to={`${url}/2021`}>2021</Link>\n                        </li>\n                        <li><Link to={`${url}/2020`}>2020</Link></li>\n                    </ul>\n\n                    <hr/>\n\n                    <Switch>\n                        <Route path={`${path}/2021`}>\n                            <Year2021 />\n                        </Route>\n                        <Route path={`${path}/2020`}>\n                            <Year2020 />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n};\n\nconst Year2021 = () => {\n\n    let {path, url} = useRouteMatch();\n\n    const listOfMonths = months.map(month => <li key={month}><Link to={`${url}/${month}`}>{month}</Link></li>)\n\n    return (<div>\n        <h2>2021</h2>\n        <ul>\n        {listOfMonths}\n        </ul>\n\n        <hr></hr>\n\n        <Switch>\n            <Route path={`${path}/:month`}>\n                <Month2021 />\n            </Route>\n        </Switch>\n    </div>);\n};\n\nconst Year2020 = () => {\n\n    let { path, url } = useRouteMatch(); \n\n    const listOfMonths = months.map(month => <li key={month}><Link to={`${url}/${month}`}>{month}</Link></li>)\n\n    return (<div>\n        <h2>2020</h2>\n        <ul>\n        {listOfMonths}\n        </ul>\n\n        <hr></hr>\n\n        <Switch>\n            <Route path={`${path}/:month`}>\n                <Month2020 />\n            </Route>\n        </Switch>\n    </div>);\n};\n\nconst Month2021 = () => {\n\n    let { month } = useParams();\n\n    return(\n        <div>\n            <h3>{month.toUpperCase()}</h3>\n            <ul>\n                <li><Link>Post 1</Link></li>\n                <li><Link>Post 2</Link></li>\n                <li><Link>Post 3</Link></li>\n                <li><Link>Post 4</Link></li>\n            </ul>\n        </div>\n    );\n};\n\nconst Month2020 = () => {\n\n    let { month } = useParams();\n\n    return(\n        <div>\n            <h3>{month.toUpperCase()}</h3>\n            <ul>\n                <li><Link>Post 1</Link></li>\n                <li><Link>Post 2</Link></li>\n                <li><Link>Post 3</Link></li>\n                <li><Link>Post 4</Link></li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Aside;","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory, useRouteMatch } from 'react-router-dom';\nimport './App.css';\nimport Posts from './Components/Posts/Posts';\nimport AddPost from './Components/AddPost/AddPost';\nimport axios from 'axios';\nimport Header from './Components/Header/Header';\nimport SinglePost from './Components/SinglePost/SinglePost.js';\nimport Welcome from './Components/Welcome/Welcome';\nimport Aside from './Components/Aside/Aside';\n\n// fetching data from fake json server hosted on my-json-server.typicode.com, posting to this db does not work, use localhost for that\nconst DB = 'https://my-json-server.typicode.com/StaffanStromsholm/react-assignement-db/posts';\n\nconst localhostDB = 'http://localhost:3001/posts';\n\nconst App = () => {\n  const [post, setPost] = useState({\n    title: '',\n    author: '',\n    imgUrl: '',\n    description: ''\n  });\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const [posts, setPosts] = useState([]);\n\n  const history = useHistory();\n\n  let { path, url } = useRouteMatch();\n\n  useEffect(() => {\n    axios\n      .get(DB)\n      .then(result => setPosts(result.data))\n  }, []);\n\n  const onChangeHandler = (e) => {\n    setPost({\n      ...post,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    axios.post(DB, post)\n      .then(() => {\n        return axios.get(DB)\n      })\n      .then(result => {\n        setPosts(result.data);\n        alert('New post was succesfully created');\n        history.push(\"/react_assignement/posts\");\n      });\n  };\n\n  const setLoggedInToFalseHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const setLoggedInToTrueHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <Header isLoggedIn={isLoggedIn} logoutHandler={setLoggedInToFalseHandler} loginHandler={setLoggedInToTrueHandler} />\n\n      <Switch>\n      <Route exact path={`/react_assignement`}>\n      {/* passing functions as props to handle state from child component Welcome to parent Component App */}\n        <Welcome logoutHandler={setLoggedInToFalseHandler} loginHandler={setLoggedInToTrueHandler} isLoggedIn={isLoggedIn} />\n      </Route>\n        <Route path={`/react_assignement/post/:postID`}>\n          <SinglePost />\n        </Route>\n        <Route path={`/react_assignement/posts`} >\n          <Posts posts={posts} />\n          <Aside />\n        </Route>\n        <Route path={`/react_assignement/newpost`}>x\n          <AddPost onChangeHandler={onChangeHandler} onSubmitHandler={onSubmitHandler} />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n"],"sourceRoot":""}